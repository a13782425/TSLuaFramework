local ResourcesManager = BaseClass("ResourcesManager", Singleton)
local ResourcesModule = nil;


-- 启动
local function Startup(self)
	self:Dispose()
    ResourcesModule = CS.TSLuaFramework.Module.SubGameModule.Instance:GetResourcesModule(App.gameGUID);
end

--- 根据ab名字和资源名字
local function GetAssetByBundleName(self,bundleName,assetName,callBack)
    ResourcesModule:LoadAsset(bundleName,assetName,abc);
end

--- 根据资源名字加载资源
local function GetAssetByName(self,assetName,callBack)
    GetAssetByBundleName(nil,assetName,callBack)
end

--- 自动卸载没用到包
local function AutoUnload(self,unusedTime)
    Logger.LogError("ccc"..unusedTime)
    ResourcesModule:AutoUnload(unusedTime);
end
---卸载一个AB包
local function UnloadAssetBundleByName(self,bundleName)
    ResourcesModule:UnloadAssetBundleByName(bundleName);
end

---卸载全部AB包
local function UnloadAll(self)
    ResourcesModule:UnloadAll();
end

-- 释放
local function Dispose(self)
end

ResourcesManager.Startup = Startup
ResourcesManager.Dispose = Dispose
---根据资源名字加载资源
---@param assetName 资源名
---@param callback 回调参数为UnityEngine.Object的Fuc
ResourcesManager.GetAssetByName = GetAssetByName
---根据ab名字和资源名字
---@param bundleName ab包名
---@param assetName 资源名
---@param callback 回调参数为UnityEngine.Object的Fuc
ResourcesManager.GetAssetByBundleName = GetAssetByBundleName
---自动卸载没用到包<会将已创建的资源也删除>
---@param unusedTime 自动卸载时间单位秒<负一为不卸载>
ResourcesManager.AutoUnload = AutoUnload;
---卸载一个AB包
---@param bundleName 包名
ResourcesManager.UnloadAssetBundleByName = UnloadAssetBundleByName;
---卸载全部AB包
ResourcesManager.UnloadAll = UnloadAll;

return ResourcesManager