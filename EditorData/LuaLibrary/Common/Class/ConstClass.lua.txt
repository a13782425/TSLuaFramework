
--[[
-- added by wsh @ 2017-12-01
-- 静态类：只读：避免访问错误，访问控制仅在调试模式下生效
-- 注意：
-- 1、调试模式下需要getmetatable再执行遍历
--]]
--- 常量类
--- @param classname 类名
--- @param const_tb 需要变为常量的表
--- @param super 父类
function ConstClass(classname, const_tb, super)
	assert(type(classname) == "string" and #classname > 0)
    local cls
    if super then
        cls = DeepCopy(super)
    else
        cls = {}
    end
	
	local tostring = function(self)
		return table.dump(self, true, 2)
	end
	
	local index = function(tb, key)
		local value = cls[key]
		if value == nil then
			Logger.LogError(tb._name.." read err: no key named : "..key.."\n"..table.dump(tb), 2)
		end
		return value
	end
	local newindex = function(tb, key, value)
		if cls[key] == nil then
			error(tb._name.." write err: No key named : "..key.."\n"..table.dump(tb), 2)
		else
			error(tb._name.."(const) can not be writed : "..key, 2)
		end
	end	
	if const_tb then
		for i,v in pairs(const_tb) do
			cls[i] = v
		end
	end

	-- 访问限制
    cls.__index = index
	cls.__newindex = newindex
	cls._name = classname
	cls.__tostring = tostring
	return setmetatable({}, cls)
end