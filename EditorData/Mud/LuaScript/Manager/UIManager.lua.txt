-- added by wsh @ 2017-12-09
-- 自定义类型
UILayerEnum = {
    --- 初始层
    None = 1 << 0,
    --- 底部层级
    Bottom = 1 << 1,
    --- 普通层级
    Normal = 1 << 4,
    --- 固定层级
    Fixed = 1 << 8,
    --- 提示层级
    Tooltip = 1 << 12,
    --- 弹窗层级
    Dialog = 1 << 16,
    --- 公告层级
    Notice = 1 << 20,
    --- (最高层级)
    Max = 1 << 24
}

local UIManager = BaseClass("UIManager", BaseManager)

local function CreateMainObj(self)
    self.MainUIObj =
        GameObject("MainUI", typeof(RectTransform), typeof(Canvas), typeof(CanvasScaler), typeof(GraphicRaycaster))
    self.MainUIObj.transform:SetParent(self.transform)
    self.MainCanvas = self.MainUIObj:GetComponent(typeof(Canvas))
    self.MainCanvas.renderMode = RenderMode.ScreenSpaceOverlay
    self.EventSystem =
        GameObject(
        "System",
        typeof(CS.UnityEngine.EventSystems.EventSystem),
        typeof(CS.UnityEngine.EventSystems.StandaloneInputModule)
    )
    self.EventSystem.transform:SetParent(self.transform)
    self.EventSystem.hideFlags = HideFlags.HideInHierarchy | HideFlags.HideInInspector
end

local function CreateLayerObj(self)
    self.RectTranDic = {}
    for key, value in pairs(UILayerEnum) do
        local obj = GameObject(tostring(key), typeof(RectTransform), typeof(CanvasGroup))
        obj.transform:SetParent(self.MainUIObj.transform)
        local rectTran = obj:GetComponent(typeof(RectTransform))
        rectTran.anchorMin = Vector2.zero
        rectTran.anchorMax = Vector2.one
        rectTran.offsetMax = Vector2.zero
        rectTran.offsetMin = Vector2.zero
        self.RectTranDic[value] = rectTran
    end
    local temp = {}
    for key, value in pairs(UILayerEnum) do
        table.insert(temp, #temp + 1, value)
    end
    table.sort(temp)
    for i, v in ipairs(temp) do
        self.RectTranDic[v]:SetSiblingIndex(v)
    end
end

local function GetLayerTran(self, layer)
    return self.RectTranDic[UILayerEnum.Fixed]
end

---显示一个界面,如果不存在则创建一个
---@param uiconfig ui的配置文件_详情请见UIConfig
local function ShowPanel(self, uiconfig)
    local target = self:GetPanel(uiconfig)
    if target == nil then
        self:CreatePanel(uiconfig)
    else
        target.gameObject:SetActive(true)
        target.transform:SetAsLastSibling()
    end
end

---实例化一个View
local function CreateView(self, uiconfig)
    local view = UIBaseView.CreateView(uiconfig, self:GetLayerTran(uiconfig.Layer))
    --显示界面
    self.Panels:push(view)
    self:ShowPanel(uiconfig)
end

---创建一个界面,如果不存在则创建一个
---@param uiconfig ui的配置文件_详情请见UIConfig
local function CreatePanel(self, uiconfig)
    if IsNull(uiconfig.PrefabObj) then
        ResourcesManager:GetInstance():GetAssetByName(
            uiconfig.PrefabName,
            function(obj)
                uiconfig.PrefabObj = obj
                CreateView(self, uiconfig)
            end
        )
    else
        CreateView(self, uiconfig)
    end
end

---获取一个Panel
local function GetPanel(self, uiconfig)
    local value =
        self.Panels:firstordefault(
        function(value)
            return value._name == uiconfig.ViewName
        end
    )
    return value
end

-- 启动
local function Startup(self)
    CreateMainObj(self)
    CreateLayerObj(self)
    --所有创建出来的界面
    self.Panels = List:new()
end

-- 释放
local function Dispose(self)
end

UIManager.Startup = Startup
UIManager.Dispose = Dispose
---显示一个界面,如果不存在则创建一个
---@param uiconfig ui的配置文件_详情请见UIConfig
UIManager.ShowPanel = ShowPanel
---创建一个界面,如果不存在则创建一个
---@param uiconfig ui的配置文件_详情请见UIConfig
UIManager.CreatePanel = CreatePanel
UIManager.GetPanel = GetPanel
UIManager.GetLayerTran = GetLayerTran
return UIManager
