local TestPanelView = BaseClass("TestPanelView", UIPanel)

local function Test(self, obj)
    Logger.LogError("Click")
    self.ViewModel.aa_color = Color(1, 1, 0)
    self.btn_test.onDoubleClick:removeEvent(self:GetLuaAction(Test))
end
local function Test1(self, old, new)
    return self.ClassName .. ":" .. tostring(new)
end
function TestPanelView:OnCreate()
    -- self.raw_img_aa.color = Color(1, 0, 0)
    Logger.Log("TestPanelView")
    self.ViewModel = UIConfig.Panel.TestPanel.ViewModel(self)
    --Logger.LogError(self.BindContext)
    self.BindingContext:Bind(self.img_aa):For("color"):To(self.ViewModel.aa_color):OneWay()
    self.BindingContext:Bind(self.inp_input):For("text"):To(self.ViewModel.aa_Text):TwoWay()
    self.BindingContext:Bind(self.txt_text):For("text"):To(self.ViewModel.aa_Text, self:GetLuaAction(Test1)):OneWay()
    self.BindingContext.SourceData = self.ViewModel
    self.ViewModel.aa_color = Color(1, 1, 1)
    self.inp_input.text = "测试"
    self.btn_test.onDoubleClick:addEvent(self:GetLuaAction(Test))
    --self.ViewModel.aa_color = Color(1,0,0)
    --local test = UIElement(self.raw_img_aa)
    -- test:onPointerClick(
    --     function(data)
    --         print("onPointerClick")
    --     end
    -- )
    -- self._test = LuaAction(self, Test)
    -- self.btn_test.onPointerClick:addEvent(self._test)
    -- test.onPointerClick:addEvent(Test);

    --self.BindContext:Bind(self.ViewModel.aa_color)
    --self.BindContext = UIConfig.Panel.TestPanel.ViewModel(self)
    -- self.BindContext.aa_color:Subscribe(
    --     function(old, new)
    --         self.raw_img_aa.color = new
    --     end
    -- )

    --self.BindContext.aa_color.Value = Color(1, 1, 0)
end

return TestPanelView
