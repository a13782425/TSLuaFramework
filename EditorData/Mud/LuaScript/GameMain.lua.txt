-- 全局模块
require "Global.Global"
--require "Common.Class.BaseClass"

-- 定义为全局模块，整个lua程序的入口类
GameMain = {}

-- local Test = BaseClass("Test", Test1)
-- Test.prop = {
--     --set访问器
--     setter = function(self, value)
--         self._prop = value
--     end,
--     --get访问器
--     getter = function(self)
--         return self._prop
--     end
-- }

-- function Test:_ctor()
--     Logger.Log("父类构造函数")
-- end

-- function Test:Abc()
--     Logger.Log("我是父类" .. self.ClassName)
--     self.prop1 = "ccc"
-- end
-- function Test:_dtor()
--     Logger.Log("父类析构函数")
-- end
-- local Test1 = BaseClass("Test1", Test)
-- Test.prop1 = {
--     --set访问器
--     setter = function(self, value)
--         self._prop1 = value
--     end,
--     --get访问器
--     getter = function(self)
--         return self._prop1
--     end
-- }
-- function Test1:_ctor()
--     Logger.Log("子类构造函数")
--     self.prop = "fff"
-- end
-- function Test1:_dtor()
--     Logger.Log("子类析构函数")
-- end
-- function Test1:Abc()
--     Logger.Log("我是子类" .. self.ClassName)
-- end

local function Start()
    print("GameMain start...")

    -- 模块启动
    CameraManager:GetInstance():Startup()
    -- UpdateManager:GetInstance():Startup()
    -- TimerManager:GetInstance():Startup()
    ResourcesManager:GetInstance():Startup()
    UIManager:GetInstance():Startup();
    UIManager:GetInstance():ShowPanel(UIConfig.Panel.TestPanel)
    --UIManager:GetInstance():ShowPanel(UIConfig.Panel.TestPanel1)
end

local function OnApplicationQuit()
    print("GameMain end...")
    --释放模块
    UIManager:GetInstance():Dispose();
    ResourcesManager:GetInstance():Dispose()
    -- TimerManager:GetInstance():Dispose()
    -- UpdateManager:GetInstance():Dispose()
    CameraManager:GetInstance():Dispose()
end

GameMain.Start = Start
GameMain.OnApplicationQuit = OnApplicationQuit

return GameMain
