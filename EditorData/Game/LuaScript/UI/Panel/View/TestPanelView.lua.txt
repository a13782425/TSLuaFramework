local TestPanelView = BaseClass("TestPanelView", UIPanel)

---界面组件定义开始
---self.tran_content
---self.txt_text
---self.inp_input
---self.btn_test
---self.img_bb
---self.img_aa
---界面组件定义结束

local function Test(self, obj)
    Logger.LogError("Click")
    -- self.ViewModel.aa_color = Color(1, 1, 0)
    -- self:Close()
    -- UIManager:S_GetInstance():ShowPanel(UIConfig.Panel.TestPanel1)
    self.peer:Send("你猜")
end
local function Test1(self, old, new)
    return self.ClassName .. ":" .. tostring(new)
end
function TestPanelView:OnCreate()
    -- self.raw_img_aa.color = Color(1, 0, 0)
    Logger.Log("TestPanelView")
    self.ViewModel = UIConfig.Panel.TestPanel.ViewModel(self)
    --Logger.LogError(self.BindContext)
    self.BindingContext:Bind(self.img_aa):For("color"):To(self.ViewModel.aa_color):OneWay()
    self.BindingContext:Bind(self.inp_input):For("text"):To(self.ViewModel.aa_Text):TwoWay()
    self.BindingContext:Bind(self.txt_text):For("text"):To(self.ViewModel.aa_Text, self:GetLuaAction(Test1)):OneWay()
    self.BindingContext.SourceData = self.ViewModel
    self.ViewModel.aa_color = Color(1, 1, 1)
    self.inp_input.text = "测试"
    self.btn_test.onDoubleClick:addEvent(self:GetLuaAction(Test))
    self:AddSubItem(UIConfig.Item.TestItem, self.tran_content)
    self.peer = TcpPeer()
    self.peer:Connect()
    -- self:Close()
end

return TestPanelView
